apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-rest-ENVIRONMENT
  namespace: flask-rest-ENVIRONMENT
  labels:
    app: flask-rest-ENVIRONMENT
spec:
  minReadySeconds: 60
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  replicas: 1
  selector:
    matchLabels:
      app: flask-rest-ENVIRONMENT
  template:
    metadata:
      labels:
        app: flask-rest-ENVIRONMENT
    spec:
      containers:
      - name: flask-rest-ENVIRONMENT
        image: CONTAINER_IMAGE
        env:
        - name: FLASK_ENV
          value: FLASK_ENV_VALUE
        - name: FLASK_MODE
          value: FLASK_MODE_VALUE
        - name: FLASK_DEBUG
          value: "FLASK_DEBUG_VALUE"
        resources:
          limits:
            cpu: ".01"
            memory: ".1Gi"
          requests:
            cpu: ".01"
            memory: ".1Gi"
        ports:
        - name: main
          containerPort: 5001
        readinessProbe:
          httpGet:
            path: /api
            port: main
          initialDelaySeconds: 20
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /api
            port: main
          initialDelaySeconds: 20
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 5
# ---
# apiVersion: autoscaling/v2beta2
# kind: HorizontalPodAutoscaler
# metadata:
#   name: flask-rest-ENVIRONMENT-hpa
#   namespace: flask-rest-ENVIRONMENT
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: flask-rest-ENVIRONMENT
#   minReplicas: 1
#   maxReplicas: 3
#   metrics:
#   - type: Resource
#     resource:
#       name: cpu
#       target:
#         type: Utilization
#         averageUtilization: 80
#   - type: Resource
#     resource:
#       name: memory
#       target:
#         type: AverageValue
#         averageValue: .08Gi
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: flask-rest-ENVIRONMENT
# #  annotations:
# #    kubernetes.io/ingress.global-static-ip-name: flask-rest
#   labels:
#     app: flask-rest-ENVIRONMENT
# spec:
#   tls:
#   - hosts:
#     - flask-rest.template.com
#     secretName: template-ssl
#   backend:
#     serviceName: flask-rest-ENVIRONMENT-svc
#     servicePort: 80
#   rules:
#   - host: flask-rest.template.com
#     http:
#       paths:
#       - path: /api/*
#         backend:
#           serviceName: flask-rest-ENVIRONMENT-svc
#           servicePort: 80
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: flask-rest-ENVIRONMENT-svc
#   labels:
#     app: flask-rest-ENVIRONMENT-svc
# spec:
#   type: NodePort
#   selector:
#     app: ff-api
#   ports:
#   - port: 80
#     targetPort: 5001
